syntax = "proto3";
option java_package = "uz.globens";

message AuthenticateUser {
  message Request{
    enum AuthMethod {
      GOOGLE = 0;
      FACEBOOK = 1;
      KAKAOTALK = 3;
      PHONE = 4;
    }
    AuthMethod method = 1;
    string authKey = 2; // could be : auth token, phone number, etc.
  }
  message Response{
    bool success = 1;
    int32 sessionKey = 2;
  }
}

message DeactivateUser{
  message Request{
    int32 sessionKey = 1;
  }
  message Response{
    bool success = 1;
  }
}

message UpdateUserDetails{
  message Request{
    string sessionKey = 1;
  }
  message Response{
    bool success = 1;
  }
}

message FetchUserDetails{
  message Request{
    string sessionKey = 1;
  }
  message Response{
    bool success = 1;
  }
}

message CreateVacancy{
  message Request{
    string sessionKey = 1;
  }
  message Response{
    bool success = 1;
  }
}

message UpdateVacancyDetails{
  message Request{
    string sessionKey = 1;
  }
  message Response{
    bool success = 1;
  }
}

message UncreateVacancy{
  message Request{
    string sessionKey = 1;
  }
  message Response{
    bool success = 1;
  }
}

message FetchVacancies{
  message Request{
    string sessionKey = 1;
  }
  message Response{
    bool success = 1;
  }
}

message FetchVacancyDetails{
  message Request{
    string sessionKey = 1;
  }
  message Response{
    bool success = 1;
  }
}

service GlobensService {
  rpc authenticateUser (AuthenticateUser.Request) returns (AuthenticateUser.Response) {}
  rpc deactivateUser (DeactivateUser.Request) returns (DeactivateUser.Response) {}
  rpc updateUserDetails(UpdateUserDetails.Request) returns (UpdateUserDetails.Response) {}
  rpc fetchUsersDetails(FetchUserDetails.Request) returns (FetchUserDetails.Response) {}
  rpc createVacancy(CreateVacancy.Request) returns (CreateVacancy.Response) {}
  rpc updateVacancyDetails(UpdateVacancyDetails.Request) returns (UpdateVacancyDetails.Response) {}
  rpc uncreateVacancy(UncreateVacancy.Request) returns (UncreateVacancy.Response) {}
  rpc fetchVacancies(FetchVacancies.Request) returns (FetchVacancies.Response) {}
  rpc fetchVacancyDetails(FetchVacancyDetails.Request) returns (FetchVacancyDetails.Response) {}
}

/*
gRPC HOWTO:
Compile into python script:
    python -m grpc_tools.protoc -I=[input directory] --python_out=[output directory] --grpc_python_out=[output directory] [file name].proto
    python -m grpc_tools.protoc -I=./gb_protos/ --python_out=./gb_grpcs/ --grpc_python_out=./gb_grpcs/ db_service.proto
Compile into java source:
    protoc --java_out=[output directory] --grpc_java_out=[output directory] [file name].proto
etc.
*/
